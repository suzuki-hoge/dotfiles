" vim:set ft=vim:

function! ActionDispatch(action)
python <<EOM
action = vim.eval('a:action')

if action == 'dump':
	e = frank.findOneByCursor()
	e._dump()

elif action == 'Dump':
	frank.dump()

elif action == 'Reload':
	frank = Frank(path1)
	frank.output()

elif action == 'PointOn':
	e = frank.findOneByCursor()
	e.pointOn()
	frank.output()

elif action == 'PointOff':
	e = frank.findOneByCursor()
	e.pointOff()
	frank.output()

elif action == 'MoveUp':
	upperPath = '%s../' % pathStacks[-1]
	pathStacks.append(upperPath)
	frank = Frank(upperPath)
	frank.output()

elif action == 'MovePrev':
	if len(pathStacks) != 1:
		pathStacks.pop()
	prevPath = pathStacks[-1]
	frank = Frank(prevPath)
	frank.output()

elif action == 'FoldOn':
	e = frank.findOneByCursor()
	e.foldOn()
	frank.reNumbering()
	frank.output()

elif action == 'FoldOff':
	e = frank.findOneByCursor()
	e.foldOff()
	frank.reNumbering()
	frank.output()

elif action == 'RecFoldOn':
	e = frank.findOneByCursor()
	e.recFoldOn()
	frank.reNumbering()
	frank.output()

elif action == 'RecFoldOff':
	e = frank.findOneByCursor()
	e.recFoldOff()
	frank.reNumbering()
	frank.output()

elif action == 'AllFoldOn':
	es = frank.getNodeSubs()
	[e.recFoldOn() for e in es]
	frank.reNumbering()
	frank.output()

elif action == 'AllFoldOff':
	es = frank.getNodeSubs()
	[e.recFoldOff() for e in es]
	frank.reNumbering()
	frank.output()

elif action == 'CloseAll':
	Tab.closeAll()

EOM
endfunction
