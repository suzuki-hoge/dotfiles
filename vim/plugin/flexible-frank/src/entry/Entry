" vim:set ft=vim:

python <<EOM

from abc import ABCMeta, abstractmethod

class Entry:

	__metaclass__ = ABCMeta

	def __init__(self, root, path):
		self.num = Num.createAndNext()
		self.path = path
		self.depth = Depth(root, path)
		self.point = Point()
		self.fold = Fold()

	@abstractmethod
	def createOutput(self):
		pass

	@abstractmethod
	def getOutputs(self, result):
		pass

	@abstractmethod
	def pointOn(self, target):
		pass

	@abstractmethod
	def pointOff(self, target):
		pass

	@abstractmethod
	def foldOn(self, target):
		pass

	@abstractmethod
	def foldOff(self, target):
		pass

	@abstractmethod
	def recFoldOn(self, target):
		pass

	@abstractmethod
	def numbering(self):
		pass

	def __iter__(self):
		return self.generator()

	def generator(self):
		yield self
		if self.type.isDir():
			for subEntry in self.entries:
				for eachSubEntry in subEntry.generator():
					yield eachSubEntry

	def dump(self):
		self._dump()
		if self.type.isDir():
			[e.dump() for e in self.entries]

	def _dump(self):
		print '%s : %s' % (self.num.value, self.path.value)
EOM
