" vim:set ft=vim:

let s:workfile1 = $frank2 . '/workfiles/workfile1.frank2'
let s:workfile2 = $frank2 . '/workfiles/workfile2.frank2'
let s:workfile3 = $frank2 . '/workfiles/workfile3.frank2'

function! Frank2Open(path)
	if s:isFrank()
		echo 'frank is already opened.'
		return
	endif

	call s:openWork2()
	call s:openWork1()
	call s:openWork3()

	call s:windowSwitch(s:workfile1_bufnum)

	call CreateTree(a:path)
	call s:output(a:path)
endfunction

function! CloseAll()
	call s:close(s:workfile1_bufnum)
	call s:close(s:workfile2_bufnum)
	call s:close(s:workfile3_bufnum)
endfunction

function! s:openWork1()
	execute 'vsplit ' . s:workfile1
	let s:workfile1_bufnum = bufnr('')
endfunction

function! s:openWork2()
	if s:isBlank()
		execute 'edit ' . s:workfile2
	else
		execute 'tabedit ' . s:workfile2
	endif
	let s:workfile2_bufnum = bufnr('')
endfunction

function! s:openWork3()
	execute 'botright 9 split ' . s:workfile3
	let s:workfile3_bufnum = bufnr('')
endfunction

function! s:close(bufnum)
	execute 'bdelete! ' . a:bufnum
endfunction

function! s:windowSwitch(bufnum)
	let l:winnum = bufwinnr(a:bufnum)
	execute winnum . 'wincmd w'
endfunction

function! s:isWork1()
	return !exists('s:workfile1_bufnum') ? 0 : bufnr('') == s:workfile1_bufnum
endfunction

function! s:isWork2()
	return !exists('s:workfile2_bufnum') ? 0 : bufnr('') == s:workfile2_bufnum
endfunction

function! s:isWork3()
	return !exists('s:workfile3_bufnum') ? 0 : bufnr('') == s:workfile3_bufnum
endfunction

function! s:isFrank()
	return 1 == s:isWork1() + s:isWork2() + s:isWork3()
endfunction

function! s:isBlank()
	return bufname('%') == ''
endfunction

function! s:output(path)
	call s:clearnBuffer()
	call s:outputHead(a:path)
	call s:outputBody()
	call s:cursorAdjust()
endfunction

function! s:clearnBuffer()
	execute 'normal ggdG'
endfunction

function! s:outputHead(path)
	call append(0, a:path)
	call append(0, a:path)
	call append(0, a:path)
endfunction

function! s:outputBody()
	for entry in g:entries
		call append('$', entry.output())
	endfor
endfunction

function! s:cursorAdjust()
	execute 'normal 5gg0'
endfunction
