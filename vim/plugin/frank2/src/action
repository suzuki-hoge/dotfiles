" vim:set ft=vim:

function! N_Edit()
	" point
	let entry = s:getOneByCursor()
	call s:edit([entry])
endfunction

function! V_Edit() range
	let entries = s:getByRange(a:firstline, a:lastline)
	call s:edit(entries)
endfunction

function! s:edit(entries)
	for entry in a:entries
		execute 'tabedit ' . entry.path
	endfor
endfunction

function! N_PointOn()
	let entry = s:getOneByCursor()
	call s:pointOn([entry])
endfunction

function! V_PointOn() range
	let entries = s:getByRange(a:firstline, a:lastline)
	call s:pointOn(entries)
endfunction

function! s:pointOn(entries)
	for entry in a:entries
		let entry.point = 1
		" update
		execute entry.index . 'delete'
		call append(entry.index - 1, entry.output())
		execute 'normal ' . entry.index . 'gg0'
	endfor
endfunction

function! N_PointOff()
	let entry = s:getOneByCursor()
	call s:pointOff([entry])
endfunction

function! V_PointOff() range
	let entries = s:getByRange(a:firstline, a:lastline)
	call s:pointOff(entries)
endfunction

function! s:pointOff(entries)
	for entry in a:entries
		let entry.point = 0
		" update
		execute entry.index . 'delete'
		call append(entry.index - 1, entry.output())
		execute 'normal ' . entry.index . 'gg0'
	endfor
endfunction

function! s:getOneByCursor()
	return g:entries[getpos('.')[1] - 5]
endfunction

function! s:getByRange(first, last)
	return g:entries[ a:first - 5 : a:last - 5 ]
endfunction

function! Dump()
	echo s:getOneByCursor()
endfunction

function! DumpAll()
	for entry in g:entries
		echo entry
	endfor
endfunction
