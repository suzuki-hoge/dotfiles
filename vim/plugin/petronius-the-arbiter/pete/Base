" vim:set ft=vim:

python <<EOM

import os.path
from abc import ABCMeta, abstractmethod

class Base:

	__metaclass__ = ABCMeta

	def __init__(self):
		self.buffer = Buffer()

	def commentOn(self, firstLine, lastLine):
		self.buffer.commentOn(firstLine, lastLine, self.getHeadMark(), self.getTailMark())

	def commentOff(self, firstLine, lastLine):
		self.buffer.commentOff(firstLine, lastLine, self.getHeadMark(), self.getTailMark())

	def commentSwitch(self, firstLine, lastLine):
		self.buffer.commentSwitch(firstLine, lastLine, self.getHeadMark(), self.getTailMark())

	@abstractmethod
	def getHeadMark(self):
		pass

	@abstractmethod
	def getTailMark(self):
		pass

	@abstractmethod
	def run(self):
		pass

	def browserReload(self, browser = 'chrome'):
		script = '%s/%s.app' % (os.path.join(vim.eval('$pete'), 'scripts', 'reload'), browser)

		vim.command('silent !open %s' % script)

	def debug(self, option):
		 var = option if not option == '' else self.getUnderCursorWord()
		 self.addDebugLines(var)

	def getUnderCursorWord(self):
		return vim.eval("expand('<cword>')")

	def addDebugLines(self, var):
		lines = self.getDebugLines(var)
		for line in lines:
			vim.command('normal o%s' % line)

	@abstractmethod
	def getDebugLines(self, var):
		pass

EOM
